'''Обход графа в глубину'''

graph = [
    [0,1,0,0,1,0,0,0,1,0,0,0],
    [1,0,0,0,0,0,0,1,0,0,1,0],
    [0,0,0,1,0,0,1,0,0,1,0,1],
    [0,0,1,0,0,1,0,1,0,1,0,0],
    [1,0,0,0,0,0,1,0,0,0,0,0],
    [0,0,0,1,0,0,0,0,0,0,1,0],
    [0,0,1,0,1,0,0,1,0,0,0,0],
    [0,1,0,1,0,0,1,0,1,0,0,0],
    [1,0,0,0,0,0,0,1,0,0,0,1],
    [0,0,1,1,0,0,0,0,0,0,0,0],
    [0,1,0,0,0,1,0,0,0,0,0,0],
    [0,0,1,0,0,0,0,0,1,0,0,0]
]

count_node = len(graph) #количество вершин

neighbour = [] #соседние вершины

#для каждой вершины графа записываем номера соседних вершин
for k in range(count_node):
    neighbour.append([])
    for l in range(count_node):
        if graph[k][l] != 0:
            neighbour[k].append(l)

visited = [] #список просмотреных ли вершин

def depth(start):
    next_node = start

    #если вершину уже посещали, прекращаем работу
    if next_node in visited:
        return
    
    visited.append(next_node) #добавляем вершину в посещенные
    for node in neighbour[next_node]: #для всех соседей
        if not node in visited: #если не посещали
            depth(node) #вызываем обход графа

    return visited
    
start = 5

d = depth(start)
print(f'Путь обхода графа в глубину, начиная с {start}-й вершины: {d}')